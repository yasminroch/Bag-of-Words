# -*- coding: utf-8 -*-
"""Atividade: Bag of Words

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XkpnrZAuasj9v9I_XLuctRFSd1U-y5cO
"""

import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
import matplotlib.pyplot as plt
import nltk
from nltk.stem import WordNetLemmatizer

from google.colab import drive
drive.mount('/content/drive')

# Carregando o JSON
df = pd.read_csv('/content/drive/My Drive/BoW/50phrases.csv')
df.head()

# Passo 2: Definição de Funções
def preprocess_text(text, remove_stopwords=False, language='english'):
    # Tokenização
    tokens = text.lower().split()

    # Remoção de Stop Words
    if remove_stopwords:
        if language == 'english':
            stop_words = set(['the', 'is', 'in', 'and', 'to', 'of'])  # Exemplo de lista de stopwords
        else:
            stop_words = set(['e', 'o', 'a', 'é', 'de'])  # Exemplo de lista de stopwords para português
        tokens = [word for word in tokens if word not in stop_words]

    return ' '.join(tokens)

def vectorize_texts(texts):
    vectorizer = CountVectorizer()
    bow = vectorizer.fit_transform(texts)
    return bow.toarray(), vectorizer.get_feature_names_out()

english_sentences = df['English_Sentences'][:25]  # Supondo que esta coluna exista no seu dataset
processed_english = [preprocess_text(sentence, remove_stopwords=True, language='english') for sentence in english_sentences]
vectors, features = vectorize_texts(processed_english)

# Teste 2: Pré-processar 25 frases em português
portuguese_sentences = df['Portuguese_Sentences'][:25]  # Supondo que esta coluna exista no seu dataset
processed_portuguese = [preprocess_text(sentence, remove_stopwords=True, language='portuguese') for sentence in portuguese_sentences]
vectors_pt, features_pt = vectorize_texts(processed_portuguese)

# Teste 3: Efeito da Remoção de Stop Words
# Sem remoção de stop words
english_no_stop = [preprocess_text(sentence, remove_stopwords=False, language='english') for sentence in english_sentences]
vectors_no_stop, _ = vectorize_texts(english_no_stop)

# Passo 4: Processamento das Frases
# Já foi feito durante os testes

# Passo 5: Análise e Visualização
def plot_comparison(vector_with_stop, vector_without_stop, title):
    lengths_with_stop = [len(vec) for vec in vector_with_stop]
    lengths_without_stop = [len(vec) for vec in vector_without_stop]

    plt.bar(['Com Stop Words', 'Sem Stop Words'], [sum(lengths_with_stop), sum(lengths_without_stop)])
    plt.title(title)
    plt.ylabel('Tamanho Total dos Vetores')
    plt.show()

plot_comparison(vectors_no_stop, vectors, 'Frases em Inglês: Com vs Sem Stop Words')